//procedure
PROCEDURE dot_product(var v,u: ARRAY_OF int,ps:int)
VAR
    i:int
BEGIN
    IF (v.length != u.length) THEN
        ps=null
    ELSE
        ps=0
        FOR i FROM 0 TO v.length STEP 1  DO
            ps += v[i] * u[i]
        END_FOR
    END_IF
END

//algorithm
ALGORITHM main1
VAR
    pair:STRUCT
        v :ARRAY_OF int;
        u :ARRAY_OF int;
    END_STRUCT
    ps,i:int
    v,u :ARRAY_OF int;
    arr :ARRAY_OF pair[10];
BEGIN
    FOR j FROM 0 TO 10 STEP 1  DO
        FOR i FROM 0 TO 3 STEP 1  DO
            write('value number '+i +'of u')
            read(u[i])
            write('value number '+i +'of v')
            read(v[i])
        END_FOR
        arr[j].u=u
        arr[j].v=v
    END_FOR
    FOR i FROM 0 TO 10 STEP 1  DO
        dot_product(arr[i].u,arr[i].v)
        IF (ps===0) THEN
            write(i+":        they are orthogonals")
        ELSE_IF(ps==null) THEN
            write(i+":        can't find product: arrays have different lengths")
        ELSE
            write(i+":        "+ps)
        END_IF
    END_FOR
END

//Function
FUNCTION dot_product(var v,u:array) : int
VAR
    scal,i:int
BEGIN
    IF (v.length != u.length) THEN
        return (null)
    ELSE
        FOR i FROM 0 TO v.length STEP 1  DO
            scal += v[i] * u[i]
        END_FOR
        return scal
    END_IF
END

ALGORITHM main2
VAR
    pair:STRUCT
        v :ARRAY_OF int;
        u :ARRAY_OF int;
    END_STRUCT
    ps,i:int
    v,u :ARRAY_OF int;
    arr :ARRAY_OF pair[10];
BEGIN
    FOR j FROM 0 TO 10 STEP 1  DO
        FOR i FROM 0 TO 3 STEP 1  DO
            write('value number '+i+'of u')
            read(u[i])
            write('value number '+i+'of v')
            read(v[i])
        END_FOR
        arr[j].u=u
        arr[j].v=v
    END_FOR
    FOR i FROM 0 TO 10 STEP 1  DO
        ps=dot_product(arr[i].u,arr[i].v)
        IF (ps===0) THEN
            write(i+":        they are orthogonals")
        ELSE_IF(ps==null) THEN
            write(i+":        can't find product: arrays have different lengths")
        ELSE
            write(i+':        '+ps)
        END_IF
    END_FOR
END
